name: CI/CD Pipeline

on:
  push:
    branches:
      - dev

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ap-southeast-1
  EKS_CLUSTER_NAME: ssi-cluster-dev
  EKS_DEPLOYMENT_NAME: ssi-node-auth-dev
  ECR_IMAGE_TAG: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Run Sequelize migrations
        run: npx sequelize-cli db:migrate --env development
        env:
          DB_HOST_NAME: ${{ secrets.DEV_DB_HOST_NAME }}
          DB_DATABASE: ${{ secrets.DEV_DB_DATABASE }}
          DB_USER_NAME: ${{ secrets.DEV_DB_USER_NAME }}
          DB_PASSWORD: ${{ secrets.DEV_DB_PASSWORD }}

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ssi_node_auth_dev
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG

      - name: Update kube config
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

      - name: Install Helm chart
        run: helm upgrade --install $EKS_DEPLOYMENT_NAME ./config/helm --values ./config/helm/values-dev.yaml --set image.tag=$ECR_IMAGE_TAG
